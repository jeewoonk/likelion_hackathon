{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport axios from \"axios\";\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst GET_POST = \"GET_POST\";\nconst setPost = createAction(SET_POST, post_list => ({\n  post_list\n})); //리스트가져오기\nconst addPost = createAction(ADD_POST, post => ({\n  post\n}));\nconst getPost = createAction(GET_POST, post => ({\n  post\n}));\nconst initialState = {\n  list: [],\n  post: []\n};\nconst initialPost = {\n  daangnProductId: \"0\",\n  title: \"실내 자전거\",\n  img: \"https://dnvefa72aowie.cloudfront.net/origin/article/202104/bce02f7c25d41ea2f758c3322de4596b9768b7fc8822ed6ab1a184fd232c50ce.webp?q=82&s=300x300&t=crop\",\n  price: \"10,000원\",\n  region: \"경기도 용인시 수지구 죽전동\",\n  like: \"관심:3\",\n  chat: \"채팅:5\"\n};\nconst getPostDB = (text = \"\") => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    let post_list = [];\n    if (text === \"\") {\n      axios({\n        method: \"get\",\n        url: \"http://54.180.112.53:8080/api/hot_articles\"\n      }).then(docs => {\n        // docs=api를 가져온 값\n        // console.log(docs.data);\n        const post_list = docs.data;\n        // console.log(post_list);\n\n        dispatch(setPost(post_list));\n      });\n    } else {\n      axios({\n        method: \"get\",\n        url: `http://54.180.112.53:8080/api/region/${text}`\n      }).then(docs => {\n        // docs=api를 가져온 값\n        // console.log(docs.data);\n        const post_list = docs.data;\n        // console.log(post_list);\n        dispatch(setPost(post_list));\n      });\n    }\n  };\n};\nconst getOnePostDB = daangnProductId => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    axios({\n      method: \"get\",\n      url: `http://54.180.112.53:8080/api/hot_articles/${daangnProductId}`\n    }).then(docs => {\n      const onePost = docs.data;\n      dispatch(getPost(onePost));\n    });\n  };\n};\nexport default handleActions({\n  [SET_POST]: (state, action) => produce(state, draft => {\n    draft.list = action.payload.post_list; //콘솔 찍어보기, 스테이트의 복제본\n  }),\n  // [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n  [GET_POST]: (state, action) => produce(state, draft => {\n    draft.post = action.payload.post;\n  })\n}, initialState);\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostDB,\n  getOnePostDB\n};\nexport { actionCreators };","map":{"version":3,"names":["createAction","handleActions","produce","axios","SET_POST","ADD_POST","GET_POST","setPost","post_list","addPost","post","getPost","initialState","list","initialPost","daangnProductId","title","img","price","region","like","chat","getPostDB","text","dispatch","getState","history","method","url","then","docs","data","getOnePostDB","onePost","state","action","draft","payload","actionCreators"],"sources":["/Users/jeewoonkim/Documents/GitHub/likelion_hackathon/src/redux/modules/post.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport axios from \"axios\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst GET_POST = \"GET_POST\";\n\nconst setPost = createAction(SET_POST, (post_list) => ({ post_list })); //리스트가져오기\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\nconst getPost = createAction(GET_POST, (post) => ({ post }));\n\nconst initialState = {\n  list: [],\n  post: [],\n};\n\nconst initialPost = {\n  daangnProductId: \"0\",\n  title: \"실내 자전거\",\n  img:\n    \"https://dnvefa72aowie.cloudfront.net/origin/article/202104/bce02f7c25d41ea2f758c3322de4596b9768b7fc8822ed6ab1a184fd232c50ce.webp?q=82&s=300x300&t=crop\",\n  price: \"10,000원\",\n  region: \"경기도 용인시 수지구 죽전동\",\n  like: \"관심:3\",\n  chat: \"채팅:5\",\n};\n\nconst getPostDB = (text = \"\") => {\n  return function (dispatch, getState, { history }) {\n    let post_list = [];\n    if (text === \"\") {\n      axios({\n        method: \"get\",\n        url: \"http://54.180.112.53:8080/api/hot_articles\",\n      }).then((docs) => {\n        // docs=api를 가져온 값\n        // console.log(docs.data);\n        const post_list = docs.data;\n        // console.log(post_list);\n\n        dispatch(setPost(post_list));\n      });\n    } else {\n      axios({\n        method: \"get\",\n        url: `http://54.180.112.53:8080/api/region/${text}`,\n      }).then((docs) => {\n        // docs=api를 가져온 값\n        // console.log(docs.data);\n        const post_list = docs.data;\n        // console.log(post_list);\n        dispatch(setPost(post_list));\n      });\n    }\n  };\n};\n\nconst getOnePostDB = (daangnProductId) => {\n  return function (dispatch, getState, { history }) {\n    axios({\n      method: \"get\",\n      url: `http://54.180.112.53:8080/api/hot_articles/${daangnProductId}`,\n    }).then((docs) => {\n      const onePost = docs.data;\n      dispatch(getPost(onePost));\n    });\n  };\n};\n\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.post_list; //콘솔 찍어보기, 스테이트의 복제본\n      }),\n    // [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n    [GET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.post = action.payload.post;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostDB,\n  getOnePostDB,\n};\n\nexport { actionCreators };\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3D,SAASC,OAAO,QAAQ,OAAO;AAE/B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,QAAQ,GAAG,UAAU;AAE3B,MAAMC,OAAO,GAAGP,YAAY,CAACI,QAAQ,EAAGI,SAAS,KAAM;EAAEA;AAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,MAAMC,OAAO,GAAGT,YAAY,CAACK,QAAQ,EAAGK,IAAI,KAAM;EAAEA;AAAK,CAAC,CAAC,CAAC;AAC5D,MAAMC,OAAO,GAAGX,YAAY,CAACM,QAAQ,EAAGI,IAAI,KAAM;EAAEA;AAAK,CAAC,CAAC,CAAC;AAE5D,MAAME,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRH,IAAI,EAAE;AACR,CAAC;AAED,MAAMI,WAAW,GAAG;EAClBC,eAAe,EAAE,GAAG;EACpBC,KAAK,EAAE,QAAQ;EACfC,GAAG,EACD,wJAAwJ;EAC1JC,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,iBAAiB;EACzBC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGA,CAACC,IAAI,GAAG,EAAE,KAAK;EAC/B,OAAO,UAAUC,QAAQ,EAAEC,QAAQ,EAAE;IAAEC;EAAQ,CAAC,EAAE;IAChD,IAAIlB,SAAS,GAAG,EAAE;IAClB,IAAIe,IAAI,KAAK,EAAE,EAAE;MACfpB,KAAK,CAAC;QACJwB,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE;MACP,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;QAChB;QACA;QACA,MAAMtB,SAAS,GAAGsB,IAAI,CAACC,IAAI;QAC3B;;QAEAP,QAAQ,CAACjB,OAAO,CAACC,SAAS,CAAC,CAAC;MAC9B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,KAAK,CAAC;QACJwB,MAAM,EAAE,KAAK;QACbC,GAAG,EAAG,wCAAuCL,IAAK;MACpD,CAAC,CAAC,CAACM,IAAI,CAAEC,IAAI,IAAK;QAChB;QACA;QACA,MAAMtB,SAAS,GAAGsB,IAAI,CAACC,IAAI;QAC3B;QACAP,QAAQ,CAACjB,OAAO,CAACC,SAAS,CAAC,CAAC;MAC9B,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAED,MAAMwB,YAAY,GAAIjB,eAAe,IAAK;EACxC,OAAO,UAAUS,QAAQ,EAAEC,QAAQ,EAAE;IAAEC;EAAQ,CAAC,EAAE;IAChDvB,KAAK,CAAC;MACJwB,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,8CAA6Cb,eAAgB;IACrE,CAAC,CAAC,CAACc,IAAI,CAAEC,IAAI,IAAK;MAChB,MAAMG,OAAO,GAAGH,IAAI,CAACC,IAAI;MACzBP,QAAQ,CAACb,OAAO,CAACsB,OAAO,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,eAAehC,aAAa,CAC1B;EACE,CAACG,QAAQ,GAAG,CAAC8B,KAAK,EAAEC,MAAM,KACxBjC,OAAO,CAACgC,KAAK,EAAGE,KAAK,IAAK;IACxBA,KAAK,CAACvB,IAAI,GAAGsB,MAAM,CAACE,OAAO,CAAC7B,SAAS,CAAC,CAAC;EACzC,CAAC,CAAC;EACJ;EACA,CAACF,QAAQ,GAAG,CAAC4B,KAAK,EAAEC,MAAM,KACxBjC,OAAO,CAACgC,KAAK,EAAGE,KAAK,IAAK;IACxBA,KAAK,CAAC1B,IAAI,GAAGyB,MAAM,CAACE,OAAO,CAAC3B,IAAI;EAClC,CAAC;AACL,CAAC,EACDE,YACF,CAAC;AAED,MAAM0B,cAAc,GAAG;EACrB/B,OAAO;EACPE,OAAO;EACPa,SAAS;EACTU;AACF,CAAC;AAED,SAASM,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}