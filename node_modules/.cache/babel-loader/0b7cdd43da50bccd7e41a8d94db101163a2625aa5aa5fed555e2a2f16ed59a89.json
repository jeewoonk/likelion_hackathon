{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\n// import { connectRouter } from \"connected-react-router\";\n\n// import User from \"./modules/user\";\nimport Post from \"./modules/post\";\nexport const history = createBrowserHistory();\nconst rootReducer = combineReducers({\n  // user: User,\n  post: Post\n  // router: connectRouter(history),\n});\n\n// const middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const {\n    logger\n  } = require(\"redux-logger\");\n  // middlewares.push(logger);\n}\nconst composeEnhancers = typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\n\n// const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// let store = (initialStore) => createStore(rootReducer, enhancer);\n\n// export default store();","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","createBrowserHistory","Post","history","rootReducer","post","env","process","NODE_ENV","logger","require","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],"sources":["/Users/jeewoonkim/Documents/GitHub/likelion_hackathon/src/redux/configureStore.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n// import thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\n// import { connectRouter } from \"connected-react-router\";\n\n// import User from \"./modules/user\";\nimport Post from \"./modules/post\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  // user: User,\n  post: Post,\n  // router: connectRouter(history),\n});\n\n// const middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  // middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\n// const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// let store = (initialStore) => createStore(rootReducer, enhancer);\n\n// export default store();\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E;AACA,SAASC,oBAAoB,QAAQ,SAAS;AAC9C;;AAEA;AACA,OAAOC,IAAI,MAAM,gBAAgB;AAEjC,OAAO,MAAMC,OAAO,GAAGF,oBAAoB,CAAC,CAAC;AAE7C,MAAMG,WAAW,GAAGN,eAAe,CAAC;EAClC;EACAO,IAAI,EAAEH;EACN;AACF,CAAC,CAAC;;AAEF;;AAEA;AACA,MAAMI,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,QAAQ;;AAEhC;AACA,IAAIF,GAAG,KAAK,aAAa,EAAE;EACzB,MAAM;IAAEG;EAAO,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;EAC1C;AACF;AAEA,MAAMC,gBAAgB,GACpB,OAAOC,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,oCAAoC,GACrED,MAAM,CAACC,oCAAoC,CAAC;EAC1C;AAAA,CACD,CAAC,GACFb,OAAO;;AAEb;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}